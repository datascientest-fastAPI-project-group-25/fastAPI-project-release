apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Values.app.namespace }}
spec:
  serviceName: {{ .Values.database.service.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
    spec:
      containers:
      - name: {{ .Values.database.name }}
        image: {{ .Values.database.image }}:{{ .Values.database.tag }}
        ports:
        - containerPort: {{ .Values.database.service.port }}
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres-db
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.database.storage.size }}
