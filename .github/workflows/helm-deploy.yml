name: Helm Chart Deploy

on:
  push:
    branches: [ main, master ]
    paths:
      - 'fastapi-helm/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev, release, prod, or all)'
        required: true
        default: 'all'
        type: choice
        options:
          - dev
          - release
          - prod
          - all

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    if: github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'all' || github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Configure Kubernetes for Development
        run: |
          echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 -d > kubeconfig
          mkdir -p $HOME/.kube
          cp kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl config use-context default
          
      - name: Verify Kubernetes Connection
        run: |
          echo "Verifying Kubernetes connection..."
          kubectl cluster-info || true
          kubectl get nodes || true

      - name: Validate Helm Chart
        run: |
          echo "Validating Helm chart for development environment..."
          helm lint ./fastapi-helm -f ./fastapi-helm/values-dev.yaml
          helm template fastapi-dev ./fastapi-helm -f ./fastapi-helm/values-dev.yaml --debug
          
      - name: Make deployment scripts executable
        run: |
          chmod +x ./fastapi-helm/deploy-dev.sh
          chmod +x ./fastapi-helm/deploy-release.sh
          chmod +x ./fastapi-helm/deploy-prod.sh
          
      - name: Deploy to Development
        run: |
          echo "Deploying to development environment..."
          ./fastapi-helm/deploy-dev.sh
          
      - name: Verify Deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=backend -n fastapi-helm-dev --timeout=120s || true
          kubectl wait --for=condition=ready pod -l app=frontend -n fastapi-helm-dev --timeout=120s || true
          
          echo "Checking pod status..."
          kubectl get pods -n fastapi-helm-dev
          
          echo "Checking service status..."
          kubectl get svc -n fastapi-helm-dev
          
          echo "Checking backend logs..."
          kubectl logs -n fastapi-helm-dev -l app=backend --tail=50 || true
          
          echo "Checking configmaps and secrets..."
          kubectl get configmap -n fastapi-helm-dev
          kubectl get secret -n fastapi-helm-dev

  deploy-release:
    runs-on: ubuntu-latest
    environment: staging
    needs: deploy-dev
    if: (github.event.inputs.environment == 'release' || github.event.inputs.environment == 'all' || github.event_name == 'push') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Configure Kubernetes for Release
        run: |
          echo "${{ secrets.KUBE_CONFIG_RELEASE }}" | base64 -d > kubeconfig
          mkdir -p $HOME/.kube
          cp kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl config use-context default
          
      - name: Verify Kubernetes Connection
        run: |
          echo "Verifying Kubernetes connection..."
          kubectl cluster-info || true
          kubectl get nodes || true

      - name: Validate Helm Chart
        run: |
          echo "Validating Helm chart for release environment..."
          helm lint ./fastapi-helm -f ./fastapi-helm/values-release.yaml
          helm template fastapi-release ./fastapi-helm -f ./fastapi-helm/values-release.yaml --debug
          
      - name: Make deployment scripts executable
        run: |
          chmod +x ./fastapi-helm/deploy-dev.sh
          chmod +x ./fastapi-helm/deploy-release.sh
          chmod +x ./fastapi-helm/deploy-prod.sh
          
      - name: Deploy to Release
        run: |
          echo "Deploying to release environment..."
          ./fastapi-helm/deploy-release.sh
          
      - name: Verify Deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=backend -n fastapi-helm-release --timeout=120s || true
          kubectl wait --for=condition=ready pod -l app=frontend -n fastapi-helm-release --timeout=120s || true
          
          echo "Checking pod status..."
          kubectl get pods -n fastapi-helm-release
          
          echo "Checking service status..."
          kubectl get svc -n fastapi-helm-release
          
          echo "Checking backend logs..."
          kubectl logs -n fastapi-helm-release -l app=backend --tail=50 || true
          
          echo "Checking configmaps and secrets..."
          kubectl get configmap -n fastapi-helm-release
          kubectl get secret -n fastapi-helm-release

  deploy-prod:
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-release
    if: (github.event.inputs.environment == 'prod' || github.event.inputs.environment == 'all' || github.event_name == 'push') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Configure Kubernetes for Production
        run: |
          echo "${{ secrets.KUBE_CONFIG_PROD }}" | base64 -d > kubeconfig
          mkdir -p $HOME/.kube
          cp kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl config use-context default
          
      - name: Verify Kubernetes Connection
        run: |
          echo "Verifying Kubernetes connection..."
          kubectl cluster-info || true
          kubectl get nodes || true

      - name: Validate Helm Chart
        run: |
          echo "Validating Helm chart for production environment..."
          helm lint ./fastapi-helm -f ./fastapi-helm/values-prod.yaml
          helm template fastapi-prod ./fastapi-helm -f ./fastapi-helm/values-prod.yaml --debug
          
      - name: Make deployment scripts executable
        run: |
          chmod +x ./fastapi-helm/deploy-dev.sh
          chmod +x ./fastapi-helm/deploy-release.sh
          chmod +x ./fastapi-helm/deploy-prod.sh
          
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          ./fastapi-helm/deploy-prod.sh
          
      - name: Verify Deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=backend -n fastapi-helm-prod --timeout=120s || true
          kubectl wait --for=condition=ready pod -l app=frontend -n fastapi-helm-prod --timeout=120s || true
          
          echo "Checking pod status..."
          kubectl get pods -n fastapi-helm-prod
          
          echo "Checking service status..."
          kubectl get svc -n fastapi-helm-prod
          
          echo "Checking backend logs..."
          kubectl logs -n fastapi-helm-prod -l app=backend --tail=50 || true
          
          echo "Checking configmaps and secrets..."
          kubectl get configmap -n fastapi-helm-prod
          kubectl get secret -n fastapi-helm-prod
