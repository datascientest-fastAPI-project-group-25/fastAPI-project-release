name: PR Creation - with Machine User Token
# This workflow creates a pull request from a feature or fix branch to the main branch 🍻.

on:
  push:
    branches:
      - 'feat/*'
      - 'fix/*'

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Determine branch type
        id: branch-type
        run: |
          if [[ "${{ env.BRANCH_NAME }}" == feat/* ]]; then
            echo "TYPE=feat" >> $GITHUB_ENV
          elif [[ "${{ env.BRANCH_NAME }}" == fix/* ]]; then
            echo "TYPE=fix" >> $GITHUB_ENV
          else
            echo "TYPE=other" >> $GITHUB_ENV
          fi

      - name: Create Pull Request with GitHub CLI
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.MACHINE_USER_TOKEN }}
        run: |
          # Authenticate GitHub CLI

          # Create PR and capture output
          # Attempt to create PR, capture output and exit code
          pr_output=$(mktemp)
          gh pr create \
            --base main \
            --head "${{ env.BRANCH_NAME }}" \
            --title "${{ env.TYPE }}: Promote ${{ env.BRANCH_NAME }} to main" \
            --body $'This PR promotes branch **${{ env.BRANCH_NAME }}** to **main**.\n\n_Automated PR created by workflow._' \
            > "$pr_output" 2>&1
          exit_code=$?

          pr_result=$(cat "$pr_output")

          if echo "$pr_result" | grep -qi "already exists"; then
            echo "Pull request already exists. Skipping creation."
            exit 0
          elif [ $exit_code -ne 0 ]; then
            echo "$pr_result"
            exit $exit_code
          fi

          # PR created successfully, extract URL from output
          pr_url="$pr_result"
          echo "PR URL: $pr_url"

          # Extract PR number from URL
          pr_number=$(basename "$pr_url" | cut -d'/' -f1)

          # Set outputs
          echo "pull-request-url=$pr_url" >> $GITHUB_OUTPUT
          echo "pull-request-number=$pr_number" >> $GITHUB_OUTPUT

      - name: PR Details
        if: steps.create-pr.outputs.pull-request-number
        run: |
          echo "PR #${{ steps.create-pr.outputs.pull-request-number }} created: ${{ steps.create-pr.outputs.pull-request-url }}"
