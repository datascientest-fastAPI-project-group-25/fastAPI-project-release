name: Helm Chart Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'charts/fastapi/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev, release, prod, or all)'
        required: true
        default: 'all'
        type: choice
        options:
          - dev
          - release
          - prod
          - all

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    if: github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'all' || github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Configure Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DEV }}
      
      - name: Validate Helm Chart
        run: |
          echo "Validating Helm chart for development environment..."
          helm lint ./charts/fastapi -f ./config/helm/staging.yaml
          helm template fastapi-dev ./charts/fastapi -f ./config/helm/staging.yaml --debug
          
      - name: Deploy to Development
        run: |
          echo "Deploying to development environment..."
          helm upgrade --install fastapi-dev ./charts/fastapi -f ./config/helm/staging.yaml -n fastapi-dev --create-namespace
          
      - name: Verify Deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=backend -n fastapi-dev --timeout=120s || true
          kubectl wait --for=condition=ready pod -l app=frontend -n fastapi-dev --timeout=120s || true
          
          echo "Checking pod status..."
          kubectl get pods -n fastapi-dev
          
          echo "Checking service status..."
          kubectl get svc -n fastapi-dev
          
          echo "Checking backend logs..."
          kubectl logs -n fastapi-dev -l app=backend --tail=50 || true
          
          echo "Checking configmaps and secrets..."
          kubectl get configmap -n fastapi-dev
          kubectl get secret -n fastapi-dev

  deploy-release:
    runs-on: ubuntu-latest
    environment: development
    needs: deploy-dev
    if: (github.event.inputs.environment == 'release' || github.event.inputs.environment == 'all' || github.event_name == 'push') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Configure Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_STAGING }}
      
      - name: Validate Helm Chart
        run: |
          echo "Validating Helm chart for release environment..."
          helm lint ./charts/fastapi -f ./config/helm/staging.yaml
          helm template fastapi-release ./charts/fastapi -f ./config/helm/staging.yaml --debug
          
      - name: Deploy to Release
        run: |
          echo "Deploying to release environment..."
          helm upgrade --install fastapi-release ./charts/fastapi -f ./config/helm/staging.yaml -n fastapi-release --create-namespace
          
      - name: Verify Deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=backend -n fastapi-release --timeout=120s || true
          kubectl wait --for=condition=ready pod -l app=frontend -n fastapi-release --timeout=120s || true
          
          echo "Checking pod status..."
          kubectl get pods -n fastapi-release
          
          echo "Checking service status..."
          kubectl get svc -n fastapi-release
          
          echo "Checking backend logs..."
          kubectl logs -n fastapi-release -l app=backend --tail=50 || true
          
          echo "Checking configmaps and secrets..."
          kubectl get configmap -n fastapi-release
          kubectl get secret -n fastapi-release

  deploy-prod:
    runs-on: ubuntu-latest
    environment: development
    needs: deploy-release
    if: (github.event.inputs.environment == 'prod' || github.event.inputs.environment == 'all' || github.event_name == 'push') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Configure Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_PROD }}
      
      - name: Validate Helm Chart
        run: |
          echo "Validating Helm chart for production environment..."
          helm lint ./charts/fastapi -f ./config/helm/production.yaml
          helm template fastapi-prod ./charts/fastapi -f ./config/helm/production.yaml --debug
          
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          helm upgrade --install fastapi-prod ./charts/fastapi -f ./config/helm/production.yaml -n fastapi-prod --create-namespace
          
      - name: Verify Deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=backend -n fastapi-prod --timeout=120s || true
          kubectl wait --for=condition=ready pod -l app=frontend -n fastapi-prod --timeout=120s || true
          
          echo "Checking pod status..."
          kubectl get pods -n fastapi-prod
          
          echo "Checking service status..."
          kubectl get svc -n fastapi-prod
          
          echo "Checking backend logs..."
          kubectl logs -n fastapi-prod -l app=backend --tail=50 || true
          
          echo "Checking configmaps and secrets..."
          kubectl get configmap -n fastapi-prod
          kubectl get secret -n fastapi-prod